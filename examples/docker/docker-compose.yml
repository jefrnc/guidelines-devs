version: '3.8'

services:
  # Aplicaci√≥n principal
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: mi-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://user:password@postgres:5432/mydb
      - REDIS_URL=redis://redis:6379
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - app-network
    restart: unless-stopped

  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: mi-app-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=mydb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

  # Cache Redis
  redis:
    image: redis:7-alpine
    container_name: mi-app-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    restart: unless-stopped

  # Administrador de base de datos (solo desarrollo)
  adminer:
    image: adminer:latest
    container_name: mi-app-adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - app-network
    profiles:
      - dev-tools

volumes:
  postgres-data:
  redis-data:

networks:
  app-network:
    driver: bridge